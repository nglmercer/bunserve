:root {
    /* Base styles */
    font-family: system-ui, Avenir, Helvetica, Arial, sans-serif;
    line-height: 1.5;
    font-weight: 400;

    /* Dark theme colors (default) */
    --text-primary: rgba(255, 255, 255, 0.87);
    --text-secondary: rgba(255, 255, 255, 0.6);
    --background-primary: #242424;
    --background-secondary: #1a1a1a;
    --accent-primary: #646cff;
    --accent-secondary: #535bf2;
    --border-color: rgba(255, 255, 255, 0.1);

    color-scheme: light dark;
    color: var(--text-primary);
    background-color: var(--background-primary);

    font-synthesis: none;
    text-rendering: optimizeLegibility;
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
}

@media (prefers-color-scheme: light) {
    :root {
        /* Light theme colors */
        --text-primary: #213547;
        --text-secondary: #4a5568;
        --background-primary: #ffffff;
        --background-secondary: #f9f9f9;
        --accent-primary: #646cff;
        --accent-secondary: #747bff;
        --border-color: rgba(0, 0, 0, 0.1);
    }
}
/**************************\
  Basic Modal Styles
\**************************/

.modal {
    font-family: -apple-system, BlinkMacSystemFont, avenir next, avenir, helvetica neue, helvetica, ubuntu, roboto, noto, segoe ui, arial, sans-serif;
}

.modal__overlay {
    position: fixed;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: rgba(0, 0, 0, 0.6);
    display: flex;
    justify-content: center;
    align-items: center;
}

.modal__container {
    background-color: var(--background-primary);
    color: var(--text-primary);
    border: 1px solid var(--border-color);
    padding-inline: 0.8rem;
    padding-block: 0.8rem;
    min-width: min(100%,400px);
    max-width: 1200px;
    max-height: 100vh;
    border-radius: 8px;
    overflow-y: auto;
    box-sizing: border-box;
}

.modal__header {
    display: flex;
    justify-content: space-between;
    align-items: center;
}

.modal__title {
    margin-top: 0;
    margin-bottom: 0;
    font-weight: 600;
    font-size: 1.25rem;
    line-height: 1.25;
    color: var(--text-primary);
    box-sizing: border-box;
}

.modal__close {
    background: #ff4d4f;
    border: 0;
    padding: 0.4rem 0.8rem;
}
.modal__close:hover {
    background: #fd2d30;
}
.modal__header .modal__close:before {
    content: "\2715";
}

.modal__content {
    margin-top: 1rem;
    margin-bottom: 0.5rem;
    line-height: 1.5;
}

.modal__btn {
    font-size: .875rem;
    padding-left: 1rem;
    padding-right: 1rem;
    padding-top: .5rem;
    padding-bottom: .5rem;
    border-radius: .25rem;
    border-style: none;
    border-width: 0;
    cursor: pointer;
    text-transform: none;
    overflow: visible;
    line-height: 1.15;
    margin: 0;
    will-change: transform;
    -moz-osx-font-smoothing: grayscale;
    -webkit-backface-visibility: hidden;
    backface-visibility: hidden;
    -webkit-transform: translateZ(0);
    transform: translateZ(0);
    transition: -webkit-transform .25s ease-out;
    transition: transform .25s ease-out;
    transition: transform .25s ease-out, -webkit-transform .25s ease-out;
}

.modal__btn:focus,
.modal__btn:hover {
    -webkit-transform: scale(1.05);
    transform: scale(1.05);
}

.modal__btn-primary {
    background-color: #00449e;
    color: #fff;
}



/**************************\
    Demo Animation Style
  \**************************/
@keyframes mmfadeIn {
    from {
        opacity: 0;
    }

    to {
        opacity: 1;
    }
}

@keyframes mmfadeOut {
    from {
        opacity: 1;
    }

    to {
        opacity: 0;
    }
}

@keyframes mmslideIn {
    from {
        transform: translateY(15%);
    }

    to {
        transform: translateY(0);
    }
}

@keyframes mmslideOut {
    from {
        transform: translateY(0);
    }

    to {
        transform: translateY(-10%);
    }
}

.micromodal-slide {
    display: none;
}

.micromodal-slide.is-open {
    display: block;
}

.micromodal-slide[aria-hidden="false"] .modal__overlay {
    animation: mmfadeIn .3s cubic-bezier(0.0, 0.0, 0.2, 1);
}

.micromodal-slide[aria-hidden="false"] .modal__container {
    animation: mmslideIn .3s cubic-bezier(0, 0, .2, 1);
}

.micromodal-slide[aria-hidden="true"] .modal__overlay {
    animation: mmfadeOut .3s cubic-bezier(0.0, 0.0, 0.2, 1);
}

.micromodal-slide[aria-hidden="true"] .modal__container {
    animation: mmslideOut .3s cubic-bezier(0, 0, .2, 1);
}

.micromodal-slide .modal__container,
.micromodal-slide .modal__overlay {
    will-change: transform;
}

/* Input styles */
input[type="text"],
input[type="email"],
input[type="password"],
input[type="number"] {
    max-width: 100%;
    padding: 0.75rem 1rem;
    margin: 0.5rem 0;
    font-size: 1rem;
    font-family: inherit;
    color: var(--text-primary);
    background-color: var(--background-secondary);
    border: 1px solid var(--border-color);
    border-radius: 8px;
    transition: border-color 0.25s, box-shadow 0.25s;
}

input[type="text"]:focus,
input[type="email"]:focus,
input[type="password"]:focus,
input[type="number"]:focus {
    outline: none;
    border-color: var(--accent-primary);
    box-shadow: 0 0 0 2px rgba(100, 108, 255, 0.2);
}

input[type="text"]::placeholder,
input[type="email"]::placeholder,
input[type="password"]::placeholder,
input[type="number"]::placeholder {
    color: var(--text-secondary);
    opacity: 0.7;
}


input[type="number"]::-webkit-outer-spin-button,
input[type="number"]::-webkit-inner-spin-button {
    -webkit-appearance: none;
    margin: 0;
}

/* Input container for better organization */
.input-container {
    margin-bottom: 1rem;
}

.input-container label {
    display: block;
    margin-bottom: 0.5rem;
    color: var(--text-primary);
    font-weight: 500;
}

.input-container .input-error {
    color: #ff4d4f;
    font-size: 0.875rem;
    margin-top: 0.25rem;
}

/* Contenedor principal del formulario */
.form-container {
    max-width: 400px;
    padding: 1rem;
    border-radius: 12px;
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
    display: flex;
    flex-direction: column;
    gap: 16px;
}

/* Grupo de campo (label + input) */
.form-group {
    display: flex;
    flex-direction: column;
    gap: 8px;
}
/* Base Colors & Text */
.bg-green-50 { background-color: #f0fdf4; }
.border-green-400 { border-color: #4ade80; }
.text-green-800 { color: #166534; }
.text-green-500 { color: #22c55e; }
.bg-green-600 { background-color: #16a34a; }
.text-white { color: #ffffff; }
.text-green-700 { color: #15803d; }

.bg-red-50 { background-color: #fef2f2; }
.border-red-400 { border-color: #f87171; }
.text-red-800 { color: #991b1b; }
.text-red-500 { color: #ef4444; }
.bg-red-600 { background-color: #dc2626; }
.text-red-700 { color: #b91c1c; }

.bg-blue-50 { background-color: #eff6ff; }
.border-blue-400 { border-color: #60a5fa; }
.text-blue-800 { color: #1e40af; }
.text-blue-500 { color: #3b82f6; }
.bg-blue-600 { background-color: #2563eb; }
.text-blue-700 { color: #1d4ed8; }

.bg-gray-50 { background-color: #f9fafb; }
.border-gray-400 { border-color: #9ca3af; }
.text-gray-800 { color: #1f2937; }
.text-gray-500 { color: #6b7280; }
.bg-gray-600 { background-color: #4b5563; }
.text-gray-700 { color: #374151; }

/* Layout & Positioning */
.fixed { position: fixed; }
.top-5 { top: 1.25rem; } /* 5 * 0.25rem */
.right-5 { right: 1.25rem; } /* 5 * 0.25rem */
.inline-flex { display: inline-flex; }
.flex-shrink-0 { flex-shrink: 0; }
.flex-grow { flex-grow: 1; }
.items-start { align-items: flex-start; }
.items-center { align-items: center; }
.justify-end { justify-content: flex-end; }
.justify-center { justify-content: center; }

/* Spacing */
.p-4 { padding: 1rem; } /* 4 * 0.25rem */
.mr-3 { margin-right: 0.75rem; } /* 3 * 0.25rem */
.mt-4 { margin-top: 1rem; } /* 4 * 0.25rem */
.px-3 { padding-left: 0.75rem; padding-right: 0.75rem; } /* 3 * 0.25rem */
.py-1\.5 { padding-top: 0.375rem; padding-bottom: 0.375rem; } /* 1.5 * 0.25rem */

/* Space Between Children (Requires direct child selector) */
.space-x-3 > :not([hidden]) ~ :not([hidden]) {
  --tw-space-x-reverse: 0;
  margin-right: calc(0.75rem * var(--tw-space-x-reverse)); /* 3 * 0.25rem */
  margin-left: calc(0.75rem * calc(1 - var(--tw-space-x-reverse)));
}

/* Sizing */
.h-6 { height: 1.5rem; } /* 6 * 0.25rem */
.w-6 { width: 1.5rem; } /* 6 * 0.25rem */

/* Typography */
.text-sm { font-size: 0.875rem; line-height: 1.25rem; }
.font-medium { font-weight: 500; }
.font-semibold { font-weight: 600; }

/* Borders */
.rounded-lg { border-radius: 0.5rem; }
.rounded-md { border-radius: 0.375rem; }
.border-l-4 { border-left-width: 4px; }

/* Rings (using box-shadow and CSS variables like Tailwind) */
.ring-1 {
  --tw-ring-offset-shadow: var(--tw-ring-inset, /*Ring inset variable default empty*/) 0 0 0 var(--tw-ring-offset-width, 0px) var(--tw-ring-offset-color, #fff);
  --tw-ring-shadow: var(--tw-ring-inset, /*Ring inset variable default empty*/) 0 0 0 calc(1px + var(--tw-ring-offset-width, 0px)) var(--tw-ring-color, rgb(59 130 246 / 0.5)); /* Default ring color */
  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000); /* Combine ring shadow with base shadow */
}
.ring-inset { --tw-ring-inset: inset; }

/* Ring Colors (Sets the --tw-ring-color variable) */
.ring-green-600\/20 { --tw-ring-color: rgb(22 163 74 / 0.2); }
.ring-red-600\/20 { --tw-ring-color: rgb(220 38 38 / 0.2); }
.ring-blue-600\/20 { --tw-ring-color: rgb(37 99 235 / 0.2); }
.ring-gray-600\/20 { --tw-ring-color: rgb(75 85 99 / 0.2); }

/* Shadows */
.shadow-lg {
  --tw-shadow: 0 10px 15px -3px rgb(0 0 0 / 0.1), 0 4px 6px -4px rgb(0 0 0 / 0.1);
  --tw-shadow-colored: 0 10px 15px -3px var(--tw-shadow-color), 0 4px 6px -4px var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}
.shadow-sm {
  --tw-shadow: 0 1px 2px 0 rgb(0 0 0 / 0.05);
  --tw-shadow-colored: 0 1px 2px 0 var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}

/* Transitions */
.transition-all {
  transition-property: all;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1); /* Default Tailwind timing */
  transition-duration: 150ms; /* Default Tailwind duration */
}
.transition-colors {
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 150ms;
}
.duration-300 { transition-duration: 300ms; }
.ease-in-out { transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1); }

/* Transforms (using CSS variables like Tailwind) */
/* Base transform style - applied when any transform utility is used */
.transform {
  transform: translate(var(--tw-translate-x, 0), var(--tw-translate-y, 0)) rotate(var(--tw-rotate, 0)) skewX(var(--tw-skew-x, 0)) skewY(var(--tw-skew-y, 0)) scaleX(var(--tw-scale-x, 1)) scaleY(var(--tw-scale-y, 1));
}
/* Specific transform */
.translate-x-\[110\%\] {
   --tw-translate-x: 110%;
   /* Ensure .transform is also applied or include the transform property here */
   transform: translate(var(--tw-translate-x, 0), var(--tw-translate-y, 0)) rotate(var(--tw-rotate, 0)) skewX(var(--tw-skew-x, 0)) skewY(var(--tw-skew-y, 0)) scaleX(var(--tw-scale-x, 1)) scaleY(var(--tw-scale-y, 1));
}

/* Opacity */
.opacity-0 { opacity: 0; }

/* Animation */
@keyframes spin {
  from { transform: rotate(0deg); }
  to { transform: rotate(360deg); }
}
.animate-spin { animation: spin 1s linear infinite; }

/* Hover States */
.hover\:bg-green-700:hover { background-color: #15803d; }
.hover\:bg-green-100:hover { background-color: #dcfce7; }
.hover\:bg-red-700:hover { background-color: #b91c1c; }
.hover\:bg-red-100:hover { background-color: #fee2e2; }
.hover\:bg-blue-700:hover { background-color: #1d4ed8; }
.hover\:bg-blue-100:hover { background-color: #dbeafe; }
.hover\:bg-gray-700:hover { background-color: #374151; }
.hover\:bg-gray-100:hover { background-color: #f3f4f6; }

/* Focus-Visible States (Outlines for buttons) */
.focus-visible\:outline:focus-visible { outline-style: solid; }
.focus-visible\:outline-2:focus-visible { outline-width: 2px; }
.focus-visible\:outline-offset-2:focus-visible { outline-offset: 2px; }

/* Focus-Visible Outline Colors */
.focus-visible\:outline-green-600:focus-visible { outline-color: #16a34a; }
.focus-visible\:outline-red-600:focus-visible { outline-color: #dc2626; }
.focus-visible\:outline-blue-600:focus-visible { outline-color: #2563eb; }
.focus-visible\:outline-gray-600:focus-visible { outline-color: #4b5563; }

/* Note: The Astro component also defines styles for a 'closeButton' which is not rendered in the provided template.
   If you need those styles, you would add classes like:
   .bg-green-50, .text-green-500, .hover\:bg-green-100:hover, .focus\:ring-green-600:focus
   .bg-red-50, .text-red-500, .hover\:bg-red-100:hover, .focus\:ring-red-600:focus
   ...etc. (using :focus instead of :focus-visible as per the original object)
   And you'd need corresponding .focus\:ring-* classes.
*/

/* --- Example Usage Notes ---
1. Include this CSS file globally in your project.
2. In your HTML/components, use the class names directly, e.g., <div class="fixed top-5 right-5 p-4 rounded-lg ...">
3. Remember that Tailwind includes "Preflight" base styles (like resets). You might need a CSS reset or normalization file for consistent results across browsers if you're not using Tailwind at all.
4. The color values (#f0fdf4, #4ade80, etc.) are based on the default Tailwind color palette.
5. The `rem` units are based on a standard root font size of 16px (1rem = 16px).
*/
.flex {
    display: flex;
    gap: 1rem;
}
.justify-cc {
    justify-content: center;
}
.space-a {
    justify-content: space-around;
}

.space-b {
    justify-content: space-between;
}